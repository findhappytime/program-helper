<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <name>helper-parent</name>

    <description>Parent pom providing dependency and plugin management for applications
        create by ashu
    </description>

    <organization>
        <name>fun.findhappytime</name>
    </organization>

    <parent>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>Cairo-SR8</version>
        <relativePath/>
    </parent>

    <groupId>fun.findhappytime</groupId>
    <artifactId>helper-parent</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <java.version>1.8</java.version>

        <!--公司 storm 包-->
        <storm-core.version>1.1.3</storm-core.version>

        <!-- mybatis -->
        <mybatis-spring-boot-starter.version>2.1.0</mybatis-spring-boot-starter.version>
        <mybatis-generator-core.version>1.4.0-SNAPSHOT</mybatis-generator-core.version>

        <!--swagger-->
        <swagger.version>2.9.2</swagger.version>


        <!-- spring-framework -->
        <spring.version>4.3.17.RELEASE</spring.version>

        <!-- spring-cloud-dependencies -->
        <spring-cloud-dependencies.version>Edgware.RELEASE</spring-cloud-dependencies.version>

        <!-- spring-security-oauth -->
        <spring-security-oauth.version>2.0.15.RELEASE</spring-security-oauth.version>

        <!-- spring-data-releasetrain -->
        <spring-data-releasetrain.version>Ingalls-SR12</spring-data-releasetrain.version>

        <!-- spring-mok -->
        <spring-mock.version>2.0.8</spring-mock.version>

        <pagehelper-spring-boot-starter.version>1.2.3</pagehelper-spring-boot-starter.version>


        <!-- apache commons & http -->
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <commons-codec.version>1.11</commons-codec.version>

        <httpcore-nio.version>4.4.8</httpcore-nio.version>

        <mapstruct.version>1.1.0.Final</mapstruct.version>

        <guava.version>28.0-jre</guava.version>

        <!-- jackson 版本 -->
        <jackson.version>2.9.8</jackson.version>

        <!-- fastjson 版本 -20200322因为安全问题去掉依赖  -->
        <!--        <fastjson.version>1.2.60</fastjson.version>-->

        <!-- maven生成archetype -->
        <maven-archetype-plugin.version>3.0.1</maven-archetype-plugin.version>

        <!-- mss服务 -->
        <mss-java-sdk-s3.version>1.9.6</mss-java-sdk-s3.version>
        <!-- spring boot 定义aws版本较高，需显示指定版本 -->
        <aws-java-sdk-core.version>1.9.4</aws-java-sdk-core.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <!--pom start-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--pom end-->

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>


            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>jackson-core</artifactId>
                        <groupId>com.fasterxml.jackson.core</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--storm config-->
            <dependency>
                <groupId>org.apache.storm</groupId>
                <artifactId>storm-core</artifactId>
                <version>${storm-core.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpcore</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-core</artifactId>
                    </exclusion>
                </exclusions>
                <!-- keep storm out of the jar-with-dependencies -->
                <!--<scope>provided</scope>-->
            </dependency>

            <!--mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!--mybatis generator-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator-core.version}</version>

            </dependency>

            <!-- util & tools -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>${httpcore-nio.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--pagehelper-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>

            <!-- S3 -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>mss-java-sdk-s3</artifactId>
                <version>${mss-java-sdk-s3.version}</version>
            </dependency>
            <dependency>
                <artifactId>aws-java-sdk-core</artifactId>
                <groupId>com.amazonaws</groupId>
                <version>${aws-java-sdk-core.version}</version>
            </dependency>

            <!--spring-mock-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-mock</artifactId>
                <version>${spring-mock.version}</version>

            </dependency>

            <!--fastjson-->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba</groupId>-->
            <!--                <artifactId>fastjson</artifactId>-->
            <!--                <version>${fastjson.version}</version>-->
            <!--            </dependency>-->

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- commons-codec是Apache开源组织提供的用于摘要运算、编码解码的包。常见的编码解码工具Base64、MD5、Hex、SHA1、DES-->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>
        <!--base dependency start-->

        <!--po  vo 映射-->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
        </dependency>
        <!--get set-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <!--base dependency end-->

        <!-- jackson start -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-annotations</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <!-- jackson end -->

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>${maven-archetype-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources/${conf-dir}</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <conf-dir>test</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>staging</id>
            <properties>
                <conf-dir>staging</conf-dir>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <conf-dir>prod</conf-dir>
            </properties>
        </profile>
    </profiles>

    <!-- 部署时往公司私服上发包, 可以在网址上找到 其他项目引入该包的需要的 XML -->
    <distributionManagement>
        <repository>
            <id>Releases</id>
            <name>Releases Repository</name>
            <url>http://xxx.cn/nexus/content/repositories/lkb-releases/</url>
        </repository>
        <snapshotRepository>
            <id>Snapshots</id>
            <name>Snapshots Repository</name>
            <url>http://xxx.cn/nexus/content/repositories/lkb-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    <!-- 发包配置 -->

</project>